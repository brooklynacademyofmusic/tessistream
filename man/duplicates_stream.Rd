% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duplicates_stream.R
\name{duplicates_stream}
\alias{duplicates_stream}
\alias{duplicates}
\alias{duplicates_data}
\title{duplicates_stream}
\usage{
duplicates_stream(...)
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[tessilake:read_tessi]{tessilake::read_tessi}}
  \describe{
    \item{\code{freshness}}{the returned data will be at least this fresh}
    \item{\code{incremental}}{whether or not to load data incrementally, default is \code{TRUE}}
  }}
}
\value{
data.table of duplicates

data.table of data for deduplication
}
\description{
Create a dataset of duplicates derived from matching names, email addresses, postal addresses, and phone numbers. The match probability
for each probable duplicate is determined using the \link{fastLink} package.
}
\details{
\subsection{Deduplication using \link{fastLink}}{

This system is based on the \link{fastLink} package, a "Fast Probabilistic Record Linkage" library developed by
\href{https://github.com/kosukeimai/fastLink}{Ted Enamorado, Ben Fifield, and Kosuke Imai}.

\link{fastLink} is designed to find matches between two datasets across multiple variables. It was designed for linking together political/social science datasets.
For deduplication, \code{duplicates_stream} compares the data against itself. Links will either be trivial \eqn{(A=A)} or they will be duplicates.

\link{fastLink} identifies matches in a way that is sensitive to the structure of the data it is given: it assigns to each match pattern a probability that it is a match.
A match pattern is a unique way that the variables match or donâ€™t match: for example, two records that match on first name, partially match on last name, one is missing
data for email, etc. The algorithm tabulates counts of every occurring combination of match / partial-match / non-match / missing data across every variable for every
combination of two records. It then uses a Bayesian expectation-maximization algorithm to determine the probability that each combination of matches / non-matches / etc.
identifies a proper match, using the overall expected match rate as a prior. Then, given a probability threshold, it outputs the identified matches.

\code{duplicates_stream} is using this system as-is with some updates for Tessi-specific deduplication:
\itemize{
\item it pulls multiple rows of data per customer from Tessitura in order to find hidden matches
\item it cleans the data, removing missing/incomplete info and also suppresses certain data that produces many false positives (school addresses and @bam.org emails)
\item it is trained based on successfully-merged records in the database
\item it uses blocking on first name, and a second pass of simple email address matching in order to reduce the overall computation time and catch more duplicates
\item it caches datasets to disk to reduce memory load
\item it provides reporting that includes the match pattern and posterior probability for each pair
}
}
}
\section{Functions}{
\itemize{
\item \code{duplicates_data()}: Load data for \link{duplicates_stream}

}}
\note{
depends on \link{address_stream}
}
