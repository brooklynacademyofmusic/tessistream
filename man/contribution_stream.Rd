% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contribution_stream.R
\name{contribution_stream}
\alias{contribution_stream}
\alias{contribution_stream_load}
\title{contribution_stream}
\usage{
contribution_stream(
  type = "stream",
  event_subtypes = list(TRUE ~ campaign_category_desc),
  event_subtypes2 = list(seq(.N) == 1 ~ "New", !is.na(cust_memb_no) &
    duplicated(cust_memb_no) | is.na(cust_memb_no) & duplicated(campaign_no) ~ "Upgrade",
    timestamp - lag(timestamp) <= ddays(365) ~ "Renew", TRUE ~ "Reinstate"),
  ...
)
}
\arguments{
\item{type}{string, e.g. "tessi" or "stream", where to save the cache, passed to \link[tessilake:write_cache]{tessilake::write_cache}}

\item{event_subtypes}{list of formulas to be used for coding \code{event_subtype}, as for \link[dplyr:case_when]{dplyr::case_when}. Can refer to any columns in the \code{contributions} table. See \strong{Note} below}

\item{event_subtypes2}{list of formulas to be used for coding \code{event_subtype2}, as for \link[dplyr:case_when]{dplyr::case_when}. Can refer to any columns in the \code{contributions} table. See \strong{Note} below}

\item{...}{additional arguments passed on to \link[tessilake:read_tessi]{tessilake::read_tessi} and friends.}
}
\description{
Creates timestamped dataset of all contributions and caches it.
Adds creditee information, categorizes contributions based on campaign and NRR status, and associates with
memberships, using \link{contribution_membership_match}.
}
\details{
Output Features are:
\itemize{
\item group_customer_no (donor or creditee)
\item timestamp : date of contribution
\item event_type : Contribution
\item event_subtype : Membership|Gala|Other
\item event_subtype2 : New|Renew|Reinstate|Upgrade
\item cont_amt
\item campaign_no (foreign key for campaign)
\item ref_no (primary key of contributions)
\item cust_memb_no (foreign key for memberships)
\item contribution_timestamp_min
\item contribution_timestamp_max
\item contribution_timestamp_last
\item contribution_SUBTYPE_count
\item contribution_amt
\item contribution_max
}
}
\section{Functions}{
\itemize{
\item \code{contribution_stream_load()}: load data for contribution_stream

}}
\note{
\itemize{
\item This value for \strong{event_subtypes}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(
   !is.na(cust_memb_no) ~ "Membership",
   grepl("BENE",campaign_desc) ~ "Gala",
   TRUE ~ campaign_category_desc
   )
}\if{html}{\out{</div>}}

Assigns event_subtype to
\itemize{
\item "Membership" for everything with a \code{cust_memb_no}
\item "Gala" for everything else with "BENE" in \code{campaign_desc} and
\item the value of \code{campaign_category_desc} for everything else
}
\item This value for \strong{event_subtypes2}, which is also the default:

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(
   1:.N == 1 ~ "New",
   !is.na(cust_memb_no) & duplicated(cust_memb_no) |
     is.na(cust_memb_no) & duplicated(campaign_no) ~ "Upgrade",
   timestamp - lag(timestamp) <= ddays(365) ~ "Renew",
   TRUE ~ "Reinstate")
}\if{html}{\out{</div>}}

Assigns event_subtype2 by group of \code{group_customer_no} / \code{event_subtype} to
\itemize{
\item "New" for the first contribution per group
\item "Upgrade" for the second contribution per \code{cust_memb_no} or \code{campaign_no}
\item "Renew" for a contribution that is within 365 days of the previous in the same group
\item "Reinstate" for everything else
}
}
}
