% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/email_stream.R
\name{email_stream}
\alias{email_stream}
\alias{email_data}
\alias{email_data_append}
\alias{email_fix_timestamp}
\alias{email_fix_eaddress}
\alias{email_subtype_features}
\alias{email_stream_base}
\alias{email_stream_chunk}
\alias{email_stream_write_partition}
\title{email_stream}
\usage{
email_data(..., from_date = as.POSIXct("1900-01-01"), to_date = now())

email_data_append(email_stream, ...)

email_fix_timestamp(email_stream)

email_fix_eaddress(email_stream)

email_subtype_features(email_stream)

email_stream_base(from_date = as.POSIXct("1900-01-01"), to_date = now(), ...)

email_stream_chunk(from_date = as.POSIXct("1900-01-01"), to_date = now(), ...)

email_stream_write_partition(email_stream)

email_stream(from_date = as.POSIXct("1900-01-01"), to_date = now(), ...)
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[tessilake:read_sql]{tessilake::read_sql}}, \code{\link[tessilake:read_sql]{tessilake::read_sql}}
  \describe{
    \item{\code{freshness}}{the returned data will be at least this fresh}
  }}

\item{from_date}{earliest date/time for which data will be returned}

\item{to_date}{latest date/time for which data will be returned}

\item{email_stream}{email data from previous step}
}
\value{
\link[arrow:Table-class]{arrow::Table} of email data
}
\description{
Combined dataset of email sends/clicks/opens from Tessitura / WordFly and data from \link{p2_stream}.
Features included are:
\itemize{
\item group_customer_no, customer_no
\item timestamp : date of email event
\item event_type : "Email"
\item event_subtype : "Open", "Click", "Unsubscribe', "Hard Bounce", "Forward", etc.
\item campaign_no, appeal_no, source_no
\item extraction_desc, source_desc
\item eaddress : email address
\item domain : domain of email (everything after the \code{@})
\item email_[subtype]_count
\item email_[subtype]_timestamp_min
\item email_[subtype]_timestamp_max
}
}
\section{Functions}{
\itemize{
\item \code{email_data()}: load Tessitura email send/response data

\item \code{email_data_append()}: adds descriptive campaign/appeal/source information from Tessitura

\item \code{email_fix_timestamp()}: recalculates timestamps for sends because \code{promote_dt} is often long before
the actual email send date.

\item \code{email_fix_eaddress()}: fills in email address based on time of send and the current email address for the customer,
using email data from \link{stream_from_audit}

\item \code{email_subtype_features()}: sets multiple \code{event_subtype == "open"} as \code{"forward"} and builds windowed features
for each \code{event_subtype}

\item \code{email_stream_base()}: produce one chunk of the base email_stream (without p2_stream or subtype features)

\item \code{email_stream_chunk()}: produce one chunk of email_stream between \code{from_date} and \code{to_date}

\item \code{email_stream_write_partition()}: write one partition of the stream to disk

\item \code{email_stream()}: appends p2 data and outputs to cache

}}
\note{
\code{email_stream()} is essentially

\if{html}{\out{<div class="sourceCode">}}\preformatted{email_data(...) \%>\%
   email_data_append(...) \%>\%
   email_fix_timestamp(...) \%>\%
   email_fix_eaddress(...) \%>\%
   concat_tables(read_cache("p2_stream", "stream"), unify_schemas = TRUE) \%>\%
   email_subtype_features(...)
}\if{html}{\out{</div>}}
}
