[{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sky Syzygy. Author, maintainer.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Syzygy S (2025). tessistream: Datasets Analytics Machine Learning Tessitura. R package version 0.5.0.","code":"@Manual{,   title = {tessistream: Datasets for Analytics and Machine Learning from Tessitura},   author = {Sky Syzygy},   year = {2025},   note = {R package version 0.5.0}, }"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/index.html","id":null,"dir":"","previous_headings":"","what":"Datasets for Analytics and Machine Learning from Tessitura","title":"Datasets for Analytics and Machine Learning from Tessitura","text":"Builds timestamped datasets based contributions, ticket sales, address changes, inventory historical predictive analysis. address_stream - customer address cleaning plus appends US Census iWave benefit_stream - discounting benefits contribution_stream - donations contributions email_stream - email sends, opens, clicks inventory_stream - number tickets available sale hold code analysis membership_stream - membership starts, ends, value ticket_future_stream - prediction future ticket purchases based inventory past buying ticket_stream - ticket purchases including discounting information stream - union address_stream, contribution_stream, email_stream, membership_stream, ticket_future_stream, ticket_stream analysis.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Datasets for Analytics and Machine Learning from Tessitura","text":"can install development version tessistream GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"skysyzygy/tessistream\")  # to install libpostal, run in the RStudio terminal: scripts/install_libpostal.sh"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Datasets for Analytics and Machine Learning from Tessitura","text":"","code":"library(tessistream) ## basic example code"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"address_cache — address_cache","title":"address_cache — address_cache","text":"Handles caching already-processed addresses processed ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_cache — address_cache","text":"","code":"address_cache(   address_stream,   cache_name,   .function,   key_cols = address_cols,   db_name = tessilake::cache_primary_path(\"address_stream.sqlite\", \"stream\"),   ... )  address_cache_chunked(   address_stream,   cache_name,   .function,   key_cols = address_cols,   db_name = tessilake::cache_primary_path(\"address_stream.sqlite\", \"stream\"),   parallel = rlang::is_installed(\"furrr\"),   n = 100,   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_cache — address_cache","text":"address_stream data.table addresses cache_name name cache file .function function called processing, sent address_stream[address_cols] additional parameters. key_cols address_cols db_name path sqlite database, defaults tessilake::cache_primary_path(\"address_stream.sqlite\",\"stream\") ... additional options passed .function parallel boolean whether run chunks parallel, defaults TRUE furrr installed. n integer chunk size","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_cache — address_cache","text":"data.table addresses processed","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_cache.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"address_cache — address_cache","text":"address_cache_chunked(): Parallel wrapper around address_cache using furrr::furrr progressr::progressr","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_census.html","id":null,"dir":"Reference","previous_headings":"","what":"address_census — address_census","title":"address_census — address_census","text":"Append census features data.table addresses based matching address_cols timestamp","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_census.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_census — address_census","text":"","code":"address_census(address_stream)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_census.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_census — address_census","text":"address_stream data.table addresses","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_census.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_census — address_census","text":"data.table addresses, one row per input row. Contains address_cols, timestamp added census features.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"address_clean — address_clean","title":"address_clean — address_clean","text":"Removes newlines, tabs, lowercases, trims whitespace, removes junk info","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_clean — address_clean","text":"","code":"address_clean(address_col, pattern = \"^(web add|unknown|no add)|^$\")"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_clean — address_clean","text":"address_col character vector address data pattern perl-compatible regular expression use identifying junk address fields","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_clean — address_clean","text":"data.table addresses cleaned","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_create_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"address_create_stream — address_create_stream","title":"address_create_stream — address_create_stream","text":"Creates address data timestamps TA_AUDIT_TABLE T_ADDRESS data","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_create_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_create_stream — address_create_stream","text":"","code":"address_create_stream(...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_create_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_create_stream — address_create_stream","text":"... additional parameters passed stream_from_audit","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_create_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_create_stream — address_create_stream","text":"data.table addresses data different points time, one change per address per day","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_geocode.html","id":null,"dir":"Reference","previous_headings":"","what":"address_geocode — address_geocode_all","title":"address_geocode — address_geocode_all","text":"Geocodes addresses using tidygeocoder package. Tries address six times, using libpostal parsing (libpostal.house_number libpostal.road passed columnes), street1, street2, US census openstreetmap geocoders.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_geocode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_geocode — address_geocode_all","text":"","code":"address_geocode_all(address_stream, num_tries = 10)  address_geocode(address_stream)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_geocode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_geocode — address_geocode_all","text":"address_stream data.table addresses num_tries integer number times retry error","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_geocode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_geocode — address_geocode_all","text":"data.table addresses, one row per address input, must include address_cols. Contains address_cols columns returned tidygeocoder","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_geocode.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"address_geocode — address_geocode_all","text":"address_geocode_all(): geocode addresses address_geocode(): geocode uncached addresses, load others cache","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"address_normalize — address_normalize","title":"address_normalize — address_normalize","text":"Normalize addresses using data address_parse address_geocode.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_normalize — address_normalize","text":"","code":"address_normalize(address_stream)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_normalize — address_normalize","text":"address_stream data.table addresses","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_normalize — address_normalize","text":"data.table addresses parsed, one per row address_stream. Contains address_cols address_cols+_cleaned.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_parse.html","id":null,"dir":"Reference","previous_headings":"","what":"address_exec_libpostal — address_exec_libpostal","title":"address_exec_libpostal — address_exec_libpostal","text":"Parses addresses using libpostal handles caching already-parsed addresses parsed ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_parse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_exec_libpostal — address_exec_libpostal","text":"","code":"address_exec_libpostal(addresses)  address_parse_libpostal(address_stream)  address_parse(address_stream, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_parse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_exec_libpostal — address_exec_libpostal","text":"addresses character vector addresses address_stream data.table addresses ... additional parameters passed address_cache_chunked","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_parse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_exec_libpostal — address_exec_libpostal","text":"data.frame parsed addresses, one row per vector element data.table addresses parsed, one per row address_stream. Contains address_cols libpostal columns. data.table addresses parsed","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_parse.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"address_exec_libpostal — address_exec_libpostal","text":"address_exec_libpostal(): execute address_parser query vector addresses address_parse_libpostal(): handle parsing libpostal","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_reverse_census.html","id":null,"dir":"Reference","previous_headings":"","what":"address_reverse_census — address_reverse_census","title":"address_reverse_census — address_reverse_census","text":"Gets census geography (tract/block/county/state) information US addresses. Skips lat/lon pairs US already forward geocoded caches results.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_reverse_census.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_reverse_census — address_reverse_census","text":"","code":"address_reverse_census(address_stream)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_reverse_census.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_reverse_census — address_reverse_census","text":"address_stream data.table addresses, must include address_cols","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_reverse_census.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_reverse_census — address_reverse_census","text":"data.table addresses, one row per address address_stream.  Contains address_cols \"state_fips\", \"county_fips\", \"census_tract\", \"census_block\", \"lat\", \"lon\"","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_reverse_census_all.html","id":null,"dir":"Reference","previous_headings":"","what":"address_reverse_census_all — address_reverse_census_all","title":"address_reverse_census_all — address_reverse_census_all","text":"Gets census geography (tract/block/county/state) information US addresses using censusxy::cxy_geography. Calls cxy_geography per row.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_reverse_census_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_reverse_census_all — address_reverse_census_all","text":"","code":"address_reverse_census_all(address_stream)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_reverse_census_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_reverse_census_all — address_reverse_census_all","text":"address_stream data.table addresses, must include lat lon","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_reverse_census_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_reverse_census_all — address_reverse_census_all","text":"data.table census geographies, one row per lat/lon pair address_stream","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"address_stream — address_stream","title":"address_stream — address_stream","text":"Create data.table stream addresses timestamps, drawing Tessitura TA_AUDIT_TRAIL T_ADDRESS data, geocoding using tidygeocoder package. Tries address six times, using libpostal parsing, street1, street2, US census openstreetmap geocoders. Appends census demographic aggregate income data iWave income data.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"address_stream — address_stream","text":"","code":"address_stream(...)  address_stream_build(...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"address_stream — address_stream","text":"... parameters passed address_create_stream","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"address_stream — address_stream","text":"data.table addresses additional address-based features","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_stream.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"address_stream — address_stream","text":"address_stream_build(): build address_stream combining data address_create_stream, address_parse, address_geocode, address_census, iWave data tessilake::read_tessi","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/address_stream.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"address_stream — address_stream","text":"Uses future::future parallel processing progressr::progressr progress tracking","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_data.html","id":null,"dir":"Reference","previous_headings":"","what":"census_data — census_data","title":"census_data — census_data","text":"Loads caches census data","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"census_data — census_data","text":"","code":"census_data(census_variables, ...)  census_get_data_all(census_variables)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"census_data — census_data","text":"census_variables data.table years/datasets/variables pull data ... additional parameters pass address_cache","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"census_data — census_data","text":"data.table census data variable info","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_data.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"census_data — census_data","text":"census_data(): Loads census data cache census_get_data_all(): Loads census data (cache)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_features.html","id":null,"dir":"Reference","previous_headings":"","what":"census_features — census_race_features","title":"census_features — census_race_features","text":"Prepare features raw census data","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"census_features — census_race_features","text":"","code":"census_race_features()  census_sex_features()  census_age_features()  census_income_features()  census_features()"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"census_features — census_race_features","text":"data.table features extracted census datasets","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_features.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"census_features — census_race_features","text":"census_race_features(): Prepares census race/ethnicity data census_sex_features(): Prepares census sex data census_age_features(): Prepares census age data census_income_features(): Prepares census income data","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"census_get_data — census_get_data","title":"census_get_data — census_get_data","text":"Wrapper around tidycensus::get_decennial tidycensus::get_acs","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"census_get_data — census_get_data","text":"","code":"census_get_data(year, dataset, variables)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"census_get_data — census_get_data","text":"year integer year requesting data. dataset character dataset load variables character vector variables load","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"census_get_data — census_get_data","text":"data.table census data","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"census_variables — census_variables","title":"census_variables — census_variables","text":"Get collection basic census variables sex, age, race, income.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"census_variables — census_variables","text":"","code":"census_variables()"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/census_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"census_variables — census_variables","text":"data.table census variables","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/collective_access_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"collective_access_stream — collective_access_stream","title":"collective_access_stream — collective_access_stream","text":"Create dataset CollectiveAccess instance.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/collective_access_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"collective_access_stream — collective_access_stream","text":"","code":"collective_access_stream(   ca_table,   table_name = ca_table,   query = \"*\",   features = NULL,   base_url = config::get(\"tessistream\")$collective_access_base_url,   login = config::get(\"tessistream\")$collective_access_login,   batch_size = 100L,   ... )  collective_access_login(login, base_url)  collective_access_search(ca_table, query, base_url, login, bundles = NULL)  collective_access_c(...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/collective_access_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"collective_access_stream — collective_access_stream","text":"ca_table character base CollectiveAccess table query (e.g. ca_entities, ca_occurrences, etc.) table_name character output table name query character search query features list features include dataset. List names used names output columns, list values identify bundle (list bundles concatenated) output column. bundle identifier can list order specify additional parameters (e.g. template, delimiter, etc.) base_url character CollectiveAccess base API endpoint ending service.php service.php/json login character format username:password authenticating CollectiveAccess batch_size integer number records request per query ... lists/vectors combine bundles list bundles, described CollectiveAccess API documentation. name bundle specifier value list parameters empty list.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/collective_access_stream.html","id":"example-","dir":"Reference","previous_headings":"","what":"Example:","title":"collective_access_stream — collective_access_stream","text":"","code":"list(      \"idno\" = \"idno\",      \"name\" = \"preferred_labels\",      \"season\" = \"ca_occurrences.hierarchy.preferred_labels\",      \"date\" = list(\"productionDate\",\"screeningDate\"),      \"artists\" = list(\"ca_entities\" = list(        \"template\" = \"<unit relativeTo='ca_entities' delimiter='|'>                          ^preferred_labels (^relationship_typename)                      <\/unit>\")      ) )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/collective_access_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"collective_access_stream — collective_access_stream","text":"character authorization token data.table list columns corresponding items bundles.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/collective_access_stream.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"collective_access_stream — collective_access_stream","text":"collective_access_login(): login CollectiveAccess instance collective_access_search(): execute search query collective_access_c(): Combine several input lists/vectors single flat vector, NULL,NA,\"null\", \"\", pure whitespace elements","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_membership_match.html","id":null,"dir":"Reference","previous_headings":"","what":"contribution_membership_match — contribution_membership_match","title":"contribution_membership_match — contribution_membership_match","text":"Match memberships contributions based matching create_dt, init_dt/cont_dt, alignment memb_amt + AVC_amt, recog_amt, start_amt cont_amt contribution. Expected fix 90% unmatched contributions.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_membership_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"contribution_membership_match — contribution_membership_match","text":"","code":"contribution_membership_match(contributions, memberships)  set_contribution_membership_match(contributions, memberships)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_membership_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"contribution_membership_match — contribution_membership_match","text":"contributions data.table contributions, must include columns group_customer_no, ref_no, cust_memb_no, campaign_category_desc, cont_amt, create_dt, cont_dt memberships data.table memberships, must include columns group_customer_no, cust_memb_no, campaign_category_desc, memb_amt, AVC_amt, recog_amt, start_amt, create_dt, init_dt","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_membership_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"contribution_membership_match — contribution_membership_match","text":"data.table contributions cust_memb_no updated match appropriate membership memberships","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_membership_match.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"contribution_membership_match — contribution_membership_match","text":"set_contribution_membership_match(): updates contributions$cust_memb_no one contribution per membership, intended called iteratively within contribution_membership_match","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"contribution_stream — contribution_stream","title":"contribution_stream — contribution_stream","text":"Creates timestamped dataset contributions caches . Adds creditee information, categorizes contributions based campaign NRR status, associates memberships, using contribution_membership_match.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"contribution_stream — contribution_stream","text":"","code":"contribution_stream(   type = \"stream\",   event_subtypes = list(TRUE ~ campaign_category_desc),   event_subtypes2 = list(seq(.N) == 1 ~ \"New\", !is.na(cust_memb_no) &     duplicated(cust_memb_no) | is.na(cust_memb_no) & duplicated(campaign_no) ~ \"Upgrade\",     timestamp - lag(timestamp) <= ddays(365) ~ \"Renew\", TRUE ~ \"Reinstate\"),   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"contribution_stream — contribution_stream","text":"type string, e.g. \"tessi\" \"stream\", save cache, passed tessilake::write_cache event_subtypes list formulas used coding event_subtype, dplyr::case_when. Can refer columns contributions table. See Note event_subtypes2 list formulas used coding event_subtype2, dplyr::case_when. Can refer columns contributions table. See Note ... additional arguments passed tessilake::read_tessi friends.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_stream.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"contribution_stream — contribution_stream","text":"Output Features : group_customer_no (donor creditee) timestamp : date contribution event_type : Contribution event_subtype : Membership|Gala|event_subtype2 : New|Renew|Reinstate|Upgrade cont_amt campaign_no (foreign key campaign) ref_no (primary key contributions) cust_memb_no (foreign key memberships) contribution_timestamp_min contribution_timestamp_max contribution_timestamp_last contribution_SUBTYPE_count contribution_amt contribution_max","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_stream.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"contribution_stream — contribution_stream","text":"contribution_stream_load(): load data contribution_stream","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/contribution_stream.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"contribution_stream — contribution_stream","text":"value event_subtypes:   Assigns event_subtype \"Membership\" everything cust_memb_no \"Gala\" everything else \"BENE\" campaign_desc value campaign_category_desc everything else value event_subtypes2, also default:   Assigns event_subtype2 group group_customer_no / event_subtype \"New\" first contribution per group \"Upgrade\" second contribution per cust_memb_no campaign_no \"Renew\" contribution within 365 days previous group \"Reinstate\" everything else","code":"list(    !is.na(cust_memb_no) ~ \"Membership\",    grepl(\"BENE\",campaign_desc) ~ \"Gala\",    TRUE ~ campaign_category_desc    ) list(    1:.N == 1 ~ \"New\",    !is.na(cust_memb_no) & duplicated(cust_memb_no) |      is.na(cust_memb_no) & duplicated(campaign_no) ~ \"Upgrade\",    timestamp - lag(timestamp) <= ddays(365) ~ \"Renew\",    TRUE ~ \"Reinstate\")"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/duplicates_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"duplicates_stream — duplicates_stream","title":"duplicates_stream — duplicates_stream","text":"Create dataset duplicates derived matching names, email addresses, postal addresses, phone numbers. match probability probable duplicate determined using fastLink package.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/duplicates_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"duplicates_stream — duplicates_stream","text":"","code":"duplicates_stream(...)  duplicates_append_data(   data,   features = rlang::exprs(`In household` = in_household, `Current membership` =     !is.na(memb_level), `Last login date` = last_login_dt, `Last activity date` =     last_activity_dt, `Last update date` = last_update_dt) )  duplicates_suppress_related(data)  duplicates_exact_match(data, match_cols)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/duplicates_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"duplicates_stream — duplicates_stream","text":"... Arguments passed tessilake::read_tessi freshness returned data least fresh incremental whether load data incrementally, default TRUE data data.table deduplicate features sorted, named list expressions use selecting customer keep. Note: ready exposed; moment appended data limited. match_cols columns match ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/duplicates_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"duplicates_stream — duplicates_stream","text":"data.table duplicates data.table data.table matching customers columns customer_no .customer_no data.table data deduplication","code":""},{"path":[]},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/duplicates_stream.html","id":"deduplication-using-fastlink","dir":"Reference","previous_headings":"","what":"Deduplication using fastLink","title":"duplicates_stream — duplicates_stream","text":"system based fastLink package, \"Fast Probabilistic Record Linkage\" library developed Ted Enamorado, Ben Fifield, Kosuke Imai. fastLink designed find matches two datasets across multiple variables. designed linking together political/social science datasets. deduplication, duplicates_stream compares data . Links either trivial \\((=)\\) duplicates. fastLink identifies matches way sensitive structure data given: assigns match pattern probability match. match pattern unique way variables match don’t match: example, two records match first name, partially match last name, one missing data email, etc. algorithm tabulates counts every occurring combination match / partial-match / non-match / missing data across every variable every combination two records. uses Bayesian expectation-maximization algorithm determine probability combination matches / non-matches / etc. identifies proper match, using overall expected match rate prior. , given probability threshold, outputs identified matches. duplicates_stream using system -updates Tessi-specific deduplication: pulls multiple rows data per customer Tessitura order find hidden matches cleans data, removing missing/incomplete info also suppresses certain data produces many false positives (school addresses @bam.org emails) trained based successfully-merged records database uses blocking first name, second pass simple email address matching order reduce overall computation time catch duplicates caches datasets disk reduce memory load provides reporting includes match pattern posterior probability pair","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/duplicates_stream.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"duplicates_stream — duplicates_stream","text":"duplicates_append_data(): Chooses duplicate pair keep delete based appended data return reason choice. duplicates_suppress_related(): Suppress duplicates related household relationships (Tessi-speak: association) . duplicates_exact_match(): Returns minimal (sense duplicate pairing limited two closest customer numbers duplicate cluster, pair listed ) set customer pairs matching exactly match_cols. duplicates_data(): Load data duplicates_stream","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/duplicates_stream.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"duplicates_stream — duplicates_stream","text":"depends address_stream","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/email_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"email_stream — email_stream","title":"email_stream — email_stream","text":"Combined dataset email sends/clicks/opens Tessitura / WordFly data p2_stream. Features included : group_customer_no, customer_no timestamp : date email event event_type : \"Email\" event_subtype : \"Open\", \"Click\", \"Unsubscribe', \"Hard Bounce\", \"Forward\", etc. campaign_no, appeal_no, source_no extraction_desc, source_desc eaddress : email address domain : domain email (everything @) email_[subtype]_count email_[subtype]_timestamp_min email_[subtype]_timestamp_max","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/email_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"email_stream — email_stream","text":"","code":"email_data(..., from_date = as.POSIXct(\"1900-01-01\"), to_date = now())  email_data_append(email_stream, ...)  email_fix_timestamp(email_stream)  email_fix_eaddress(email_stream)  email_subtype_features(email_stream)  email_stream_base(from_date = as.POSIXct(\"1900-01-01\"), to_date = now(), ...)  email_stream_chunk(from_date = as.POSIXct(\"1900-01-01\"), to_date = now(), ...)  email_stream_write_partition(email_stream)  email_stream(from_date = as.POSIXct(\"1900-01-01\"), to_date = now(), ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/email_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"email_stream — email_stream","text":"... Arguments passed tessilake::read_sql, tessilake::read_sql freshness returned data least fresh from_date earliest date/time data returned to_date latest date/time data returned email_stream email data previous step","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/email_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"email_stream — email_stream","text":"arrow::Table email data","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/email_stream.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"email_stream — email_stream","text":"email_data(): load Tessitura email send/response data email_data_append(): adds descriptive campaign/appeal/source information Tessitura email_fix_timestamp(): recalculates timestamps sends promote_dt often long actual email send date. email_fix_eaddress(): fills email address based time send current email address customer, using email data stream_from_audit email_subtype_features(): sets multiple event_subtype == \"open\" \"forward\" builds windowed features event_subtype email_stream_base(): produce one chunk base email_stream (without p2_stream subtype features) email_stream_chunk(): produce one chunk email_stream from_date to_date email_stream_write_partition(): write one partition stream disk email_stream(): appends p2 data outputs cache","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/email_stream.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"email_stream — email_stream","text":"email_stream() essentially","code":"email_data(...) %>%    email_data_append(...) %>%    email_fix_timestamp(...) %>%    email_fix_eaddress(...) %>%    concat_tables(read_cache(\"p2_stream\", \"stream\"), unify_schemas = TRUE) %>%    email_subtype_features(...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/make_resilient.html","id":null,"dir":"Reference","previous_headings":"","what":"make_resilient — make_resilient","title":"make_resilient — make_resilient","text":"Simple wrapper retry expression fails","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/make_resilient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_resilient — make_resilient","text":"","code":"make_resilient(expr, num_tries = 10, sleep_secs = 10, default = NULL)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/make_resilient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_resilient — make_resilient","text":"expr expression try run num_tries number times attempt run expr sleep_secs numbe seconds sleep tries default value return expr fails num_tries times","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/make_resilient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make_resilient — make_resilient","text":"result expr default depending whether expr ever ran successfully","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_add_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_add_tag — p2_add_tag","title":"p2_add_tag — p2_add_tag","text":"Adds tag contact P2 (https://developers.activecampaign.com/reference/create-contact-tag)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_add_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_add_tag — p2_add_tag","text":"","code":"p2_add_tag(contact, tag, dry_run = FALSE)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_add_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_add_tag — p2_add_tag","text":"contact integer P2 contact number tag character, string tag dry_run boolean, nothing changed P2 set TRUE","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_combine_jsons.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_combine_jsons — p2_combine_jsons","title":"p2_combine_jsons — p2_combine_jsons","text":"Combine JSON objects returned Active Campaign API, concatenating element name.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_combine_jsons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_combine_jsons — p2_combine_jsons","text":"","code":"p2_combine_jsons(jsons)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_combine_jsons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_combine_jsons — p2_combine_jsons","text":"jsons list named lists data.tables, returned p2_json_to_datatable","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_combine_jsons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_combine_jsons — p2_combine_jsons","text":"single JSON object list, NULL empty unnamed","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_db_open.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_db_open — p2_db_open","title":"p2_db_open — p2_db_open","text":"Open local P2 email database","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_db_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_db_open — p2_db_open","text":"","code":"p2_db_open(db_path = tessilake::cache_primary_path(\"p2.sqlite\", \"stream\"))  p2_db_close()"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_db_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_db_open — p2_db_open","text":"db_path path SQLite database","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_db_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_db_open — p2_db_open","text":"invisible","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_db_open.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"p2_db_open — p2_db_open","text":"p2_db_close(): Close local P2 email database","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_db_update.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_db_update — p2_db_update","title":"p2_db_update — p2_db_update","text":"Write local P2 email database, either creating new table upserting existing one","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_db_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_db_update — p2_db_update","text":"","code":"p2_db_update(data, table, overwrite = FALSE)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_db_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_db_update — p2_db_update","text":"data data.frame data write database table table name overwrite logical whether delete overwrite existing table","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_db_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_db_update — p2_db_update","text":"invisible","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_email_map.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_email_map — p2_email_map","title":"p2_email_map — p2_email_map","text":"Constructs many--many mapping email addresses / P2 subscriber ids Tessi customer numbers","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_email_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_email_map — p2_email_map","text":"","code":"p2_email_map()"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_email_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_email_map — p2_email_map","text":"data.table mapping email addresses customer numbers","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_execute_api.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_execute_api — p2_execute_api","title":"p2_execute_api — p2_execute_api","text":"Sends JSON object P2 API endpoint url using api_key returns T/F based success_codes","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_execute_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_execute_api — p2_execute_api","text":"","code":"p2_execute_api(   url,   object = list(),   success_codes = c(200, 201, 202),   method = \"POST\",   api_key = keyring::key_get(\"P2_API\"),   dry_run = FALSE )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_execute_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_execute_api — p2_execute_api","text":"url character, endpoint url API object list converted JSON using jsonlite::toJSON success_codes, integer vector success codes returned API method, character name httr function call, usually POST PUT api_key Active Campaign API key, defaults keyring::key_get(\"P2_API\") dry_run boolean, nothing changed P2 set TRUE","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_execute_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_execute_api — p2_execute_api","text":"TRUE success, FALSE ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_json_to_datatable.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_json_to_datatable — p2_json_to_datatable","title":"p2_json_to_datatable — p2_json_to_datatable","text":"Convert P2 JSON objects data table","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_json_to_datatable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_json_to_datatable — p2_json_to_datatable","text":"","code":"p2_json_to_datatable(json)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_json_to_datatable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_json_to_datatable — p2_json_to_datatable","text":"json list P2 JSON objects","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_load.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_load — p2_load","title":"p2_load — p2_load","text":"Load p2 data api/3/{table}, modified arguments ... matching table local database","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_load — p2_load","text":"","code":"p2_load(   table,   offset = NULL,   max_len = NULL,   jobs = NULL,   overwrite = FALSE,   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_load — p2_load","text":"table character, table update offset integer offset start query return; default 0. max_len integer maximum number rows load, defaults p2_query_table_length() - offset. jobs data.table jobs run instead building jobs based offset max_len overwrite logical, whether overwrite table database ... additional parameters pass modify_url","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_orphans.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_orphans — p2_orphans","title":"p2_orphans — p2_orphans","text":"Create dataset orphaned accounts Prospect2 comparing accounts Prospect2 accounts Tessi. orphan account exists P2, originated Tessitura, longer matches account primary email address Tessitura.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_orphans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_orphans — p2_orphans","text":"","code":"p2_orphans(freshness = 0)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_orphans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_orphans — p2_orphans","text":"freshness difftime,    returned data least fresh","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_orphans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_orphans — p2_orphans","text":"data.table orphaned accounts","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_orphans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"p2_orphans — p2_orphans","text":"v0.3.0 also checks see customer_no primary email address (household members) matches customer_no recorded P2.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_query_api.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_query_api — p2_query_table_length","title":"p2_query_api — p2_query_table_length","text":"Parallel load P2/Active Campaign API url key api_key. Loads pages 100 records reaches total.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_query_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_query_api — p2_query_table_length","text":"","code":"p2_query_table_length(url, api_key = keyring::key_get(\"P2_API\"))  p2_query_api(   url,   api_key = keyring::key_get(\"P2_API\"),   offset = NULL,   max_len = NULL,   jobs = NULL )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_query_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_query_api — p2_query_table_length","text":"url Active Campaign API url query api_key Active Campaign API key, defaults keyring::key_get(\"P2_API\") offset integer offset start query return; default 0. max_len integer maximum number rows load, defaults p2_query_table_length() - offset. jobs data.table jobs run instead building jobs based offset max_len","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_query_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_query_api — p2_query_table_length","text":"JSON object list","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_query_api.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"p2_query_api — p2_query_table_length","text":"p2_query_table_length(): get length p2 API table url","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_resolve_orphan.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_resolve_orphan — p2_resolve_orphan","title":"p2_resolve_orphan — p2_resolve_orphan","text":"Resolves orphan accounts P2 based following tests: email exists P2 email already used P2 customer # field P2 matches value passed customer_no","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_resolve_orphan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_resolve_orphan — p2_resolve_orphan","text":"","code":"p2_resolve_orphan(from = NULL, to = NULL, customer_no = NULL, dry_run = FALSE)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_resolve_orphan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_resolve_orphan — p2_resolve_orphan","text":"character, email P2 needs changed character, email replace email customer_no integer vector, customer numbers; one must match customer # field P2 update run dry_run boolean, nothing changed P2 set TRUE","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_resolve_orphan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_resolve_orphan — p2_resolve_orphan","text":"TRUE update run succesfully, FALSE .","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_resolve_orphan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"p2_resolve_orphan — p2_resolve_orphan","text":"updates email P2 , iff #1, #2 & #3 pass; marks account tag P2 iff #1 #3 pass, #2 pass","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_stream — p2_stream","title":"p2_stream — p2_stream","text":"Combined dataset email sends/clicks/opens/unsubscribes Prospect2. Features included : group_customer_no, customer_no subscriberid : Prospect2 customer id timestamp : date email event email : email address event_type : \"Email\" event_subtype : \"Open\", \"Click\", \"Unsubscribe', \"Hard Bounce\", \"Soft Bounce\", etc. campaignid, messageid, listid, linkid : Prospect2 internal ids ip, ua, uasrc, referer, isread, times : Email open data status : List subscription status","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_stream — p2_stream","text":"","code":"p2_stream()"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_stream — p2_stream","text":"stream data.table","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"p2_stream — p2_stream","text":"p2_stream(): Update build p2 parquet files","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream_build.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_stream_build — p2_stream_build","title":"p2_stream_build — p2_stream_build","text":"p2_stream_build","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream_build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_stream_build — p2_stream_build","text":"","code":"p2_stream_build()"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream_build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_stream_build — p2_stream_build","text":"p2_stream data.table","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream_enrich.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_stream_enrich — p2_stream_enrich","title":"p2_stream_enrich — p2_stream_enrich","text":"p2_stream_enrich","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream_enrich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_stream_enrich — p2_stream_enrich","text":"","code":"p2_stream_enrich(p2_stream)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream_enrich.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_stream_enrich — p2_stream_enrich","text":"p2_stream stream data.table p2_stream_build","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_stream_enrich.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_stream_enrich — p2_stream_enrich","text":"stream data.table added descriptive columns","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_unnest.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_unnest — p2_unnest","title":"p2_unnest — p2_unnest","text":"Unnest nested data.table wider. might useful function purposes need testing. now least work nested structures come P2 JSONs","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_unnest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_unnest — p2_unnest","text":"","code":"p2_unnest(data, colname)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_unnest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_unnest — p2_unnest","text":"data data.table colname character, column unnest","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_unnest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p2_unnest — p2_unnest","text":"unnested data.table, modified place (unless column needs unnested longer)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_unnest.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"p2_unnest — p2_unnest","text":"Assumes speed elements column either named unnamed. List columns variable length filled NAs unnesting.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_update.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_update — p2_update","title":"p2_update — p2_update","text":"Incrementally update p2 data local sqlite database","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_update — p2_update","text":"","code":"p2_update()"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_update_email.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_update_email — p2_update_email","title":"p2_update_email — p2_update_email","text":"Updates email contact P2 (https://developers.activecampaign.com/reference/update--contact-new)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_update_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_update_email — p2_update_email","text":"","code":"p2_update_email(contact, email, dry_run = FALSE)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_update_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_update_email — p2_update_email","text":"contact integer P2 contact number email character, new email contact dry_run boolean, nothing changed P2 set TRUE","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_update_orphans.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_update_orphans — p2_update_orphans","title":"p2_update_orphans — p2_update_orphans","text":"Run p2_update_email emails changed since since using Tessitura data least fresh freshness","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_update_orphans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_update_orphans — p2_update_orphans","text":"","code":"p2_update_orphans(freshness = 0, since = Sys.time() - 7200, test_emails = NULL)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_update_orphans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_update_orphans — p2_update_orphans","text":"freshness datediff, passed tessilake functions, defaults 0 (refresh data) since datetime, passed tessi_changed_emails, defaults last two hours. test_emails character, set updates dry runs except emails matching test_emails","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_verb_thing.html","id":null,"dir":"Reference","previous_headings":"","what":"p2_verb_thing — p2_delete_tags","title":"p2_verb_thing — p2_delete_tags","text":"p2_verb_thing","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_verb_thing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p2_verb_thing — p2_delete_tags","text":"","code":"p2_delete_tags(tags, dry_run = FALSE)  p2_rename_tags(tags, new_tags, dry_run = FALSE)  p2_delete_segments(segments, dry_run = FALSE)  p2_verb_thing(   existing_things,   new_things = NULL,   verb,   thing,   dry_run = FALSE,   .name = thing )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_verb_thing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p2_verb_thing — p2_delete_tags","text":"tags character vector tags update/delete dry_run boolean, nothing changed P2 set TRUE new_tags character vector new names tags segments character vector segments delete existing_things character vector existing entity names new_things list objects send API endpoint verb HTTP verb use API thing character entity update (\"api/3/\") .name character name field existing_things refers ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/p2_verb_thing.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"p2_verb_thing — p2_delete_tags","text":"p2_delete_tags(): delete P2 tags p2_rename_tags(): rename P2 tags p2_delete_segments(): delete P2 list segments","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/progress_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"progress_expr — progress_expr","title":"progress_expr — progress_expr","text":"Wrapper incrementing progress end expr evaluation.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/progress_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"progress_expr — progress_expr","text":"","code":"progress_expr(expr, .progress)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/progress_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"progress_expr — progress_expr","text":"expr expression evaluate .progress progression function call run expr","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/progress_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"progress_expr — progress_expr","text":"result expr","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/progressr_.html","id":null,"dir":"Reference","previous_headings":"","what":"progressr_ — progressr_","title":"progressr_ — progressr_","text":"Helper function create progressr::progression (dummy function) progressr exist","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/progressr_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"progressr_ — progressr_","text":"","code":"progressr_(n)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/progressr_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"progressr_ — progressr_","text":"n integer number loops","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/progressr_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"progressr_ — progressr_","text":"function called n loops","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/setnafill.html","id":null,"dir":"Reference","previous_headings":"","what":"setnafill — setnafill","title":"setnafill — setnafill","text":"Wrapper data.table::setnafill fast filling group non-numeric columns. Displatches setnafill_ functions based column class type fill","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/setnafill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setnafill — setnafill","text":"","code":"setnafill(   x,   type = c(\"const\", \"locf\", \"nocb\"),   fill = NA,   cols = seq_along(x),   by = NA )  setnafill_const_simple(x, type = \"const\", fill = NA, cols = seq_along(x))  setnafill_group(x, type = \"locf\", cols = seq_along(x), by = NA)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/setnafill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setnafill — setnafill","text":"x data.table type character, one \"const\", \"locf\" \"nocb\". Defaults \"const\". fill vector, value used fill type==\"const\". cols numeric character vector specifying columns updated. character string columns group ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/setnafill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setnafill — setnafill","text":"data.table, filled -place","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/setnafill.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"setnafill — setnafill","text":"setnafill_const_simple(): Simple constant fill factors character setnafill_group(): rolling join quickly setnafill groups","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/setnafill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"setnafill — setnafill","text":"","code":"x <- data.table::data.table(a = NA_character_, b = rep(seq(1, 2), each = 10)) x[1, a := \"a\"] #>          a     b #>     <char> <int> #>  1:      a     1 #>  2:   <NA>     1 #>  3:   <NA>     1 #>  4:   <NA>     1 #>  5:   <NA>     1 #>  6:   <NA>     1 #>  7:   <NA>     1 #>  8:   <NA>     1 #>  9:   <NA>     1 #> 10:   <NA>     1 #> 11:   <NA>     2 #> 12:   <NA>     2 #> 13:   <NA>     2 #> 14:   <NA>     2 #> 15:   <NA>     2 #> 16:   <NA>     2 #> 17:   <NA>     2 #> 18:   <NA>     2 #> 19:   <NA>     2 #> 20:   <NA>     2 #>          a     b x[10, a := \"x\"] #>          a     b #>     <char> <int> #>  1:      a     1 #>  2:   <NA>     1 #>  3:   <NA>     1 #>  4:   <NA>     1 #>  5:   <NA>     1 #>  6:   <NA>     1 #>  7:   <NA>     1 #>  8:   <NA>     1 #>  9:   <NA>     1 #> 10:      x     1 #> 11:   <NA>     2 #> 12:   <NA>     2 #> 13:   <NA>     2 #> 14:   <NA>     2 #> 15:   <NA>     2 #> 16:   <NA>     2 #> 17:   <NA>     2 #> 18:   <NA>     2 #> 19:   <NA>     2 #> 20:   <NA>     2 #>          a     b  y <- data.table::copy(x) setnafill(y, type = \"const\", fill = \"test\", cols = \"a\")[] #>          a     b #>     <char> <int> #>  1:      a     1 #>  2:   test     1 #>  3:   test     1 #>  4:   test     1 #>  5:   test     1 #>  6:   test     1 #>  7:   test     1 #>  8:   test     1 #>  9:   test     1 #> 10:      x     1 #> 11:   test     2 #> 12:   test     2 #> 13:   test     2 #> 14:   test     2 #> 15:   test     2 #> 16:   test     2 #> 17:   test     2 #> 18:   test     2 #> 19:   test     2 #> 20:   test     2 #>          a     b  y <- data.table::copy(x) setnafill(y, type = \"locf\", by = \"b\")[] #>          a     b #>     <char> <int> #>  1:      a     1 #>  2:      a     1 #>  3:      a     1 #>  4:      a     1 #>  5:      a     1 #>  6:      a     1 #>  7:      a     1 #>  8:      a     1 #>  9:      a     1 #> 10:      x     1 #> 11:   <NA>     2 #> 12:   <NA>     2 #> 13:   <NA>     2 #> 14:   <NA>     2 #> 15:   <NA>     2 #> 16:   <NA>     2 #> 17:   <NA>     2 #> 18:   <NA>     2 #> 19:   <NA>     2 #> 20:   <NA>     2 #>          a     b  y <- data.table::copy(x) setnafill(y, type = \"nocb\", by = \"b\")[] #>          a     b #>     <char> <int> #>  1:      a     1 #>  2:      x     1 #>  3:      x     1 #>  4:      x     1 #>  5:      x     1 #>  6:      x     1 #>  7:      x     1 #>  8:      x     1 #>  9:      x     1 #> 10:      x     1 #> 11:   <NA>     2 #> 12:   <NA>     2 #> 13:   <NA>     2 #> 14:   <NA>     2 #> 15:   <NA>     2 #> 16:   <NA>     2 #> 17:   <NA>     2 #> 18:   <NA>     2 #> 19:   <NA>     2 #> 20:   <NA>     2 #>          a     b"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/setunite.html","id":null,"dir":"Reference","previous_headings":"","what":"setunite — setunite","title":"setunite — setunite","text":"Convenience function paste together multiple columns one. Thin wrapper around tidyr::unite","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/setunite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setunite — setunite","text":"","code":"setunite(data, col, ..., sep = \"_\", remove = TRUE, na.rm = FALSE)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/setunite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setunite — setunite","text":"data data.table act col name new column, string symbol. ... <tidy-select> Columns unite sep Separator use values. remove TRUE, default, remove input columns output data frame. na.rm TRUE, missing values removed prior uniting value.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/sqlite_upsert.html","id":null,"dir":"Reference","previous_headings":"","what":"sqlite_upsert — sqlite_upsert","title":"sqlite_upsert — sqlite_upsert","text":"Updates table sqlite database based index columns","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/sqlite_upsert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sqlite_upsert — sqlite_upsert","text":"","code":"sqlite_upsert(con, table, data)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/sqlite_upsert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sqlite_upsert — sqlite_upsert","text":"con DBI connection object table string name table data data.frame data update, rows matched index columns","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/sqlite_upsert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sqlite_upsert — sqlite_upsert","text":"invisibly","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream.html","id":null,"dir":"Reference","previous_headings":"","what":"stream — stream","title":"stream — stream","text":"Combine streams named streams single dataset, filling columns matched fill_match creating windowed features using windows offsets columns matched window_match. full dataset rebuilt rebuild TRUE (default: FALSE), data appended existing cache incremental TRUE (default: TRUE)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stream — stream","text":"","code":"stream(   streams = c(\"email_stream\", \"ticket_stream\", \"contribution_stream\",     \"membership_stream\", \"ticket_future_stream\", \"address_stream\"),   fill_match =     \"^(email|ticket|contribution|membership|ticket|address).+(amt|level|count|max|min|last)\",   window_match = \"^(email|ticket|contribution|membership|ticket|address).+(count|amt)$\",   chunk_size = 1e+07,   rebuild = FALSE,   since = now() - dyears(),   incremental = !rebuild,   windows = lapply(c(1, 7, 30, 90, 365), lubridate::period, units = \"day\"),   ... )  stream_chunk_write(   stream,   fill_cols = setdiff(colnames(stream), c(by, \"timestamp\")),   window_cols = fill_cols,   since = as_datetime(min(stream$timestamp)),   by = \"group_customer_no\",   incremental = TRUE,   ... )  stream_window_features(   stream,   window_cols = setdiff(colnames(stream), c(by, \"timestamp\")),   since = min(stream$timestamp),   windows = NULL,   by = \"group_customer_no\",   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stream — stream","text":"streams character vector streams combine fill_match character regular expression use matching columns fill window_match character regular expression use matching columns window chunk_size integer number rows include partition dataset rebuild logical whether rebuild whole dataset (TRUE) just append end (FALSE) since POSIXct data timestamps greater equal since written incremental logical whether update cache incrementally. Can require huge amounts memory (approximately double total dataset size appended). windows lubridate::period vector determines offsets used constructing windowed features. ... used stream data.table data process write fill_cols character columns fill window_cols character columns window character column name group filling windowing","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"stream — stream","text":"stream dataset arrow::Table","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"stream — stream","text":"stream_chunk_write(): Fill cols stream_cols add windowed features stream timestamps since stream_window_features(): construct windowed features columns stream_cols, using windows, list lubridate::periods offsets, grouped ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_customer_history.html","id":null,"dir":"Reference","previous_headings":"","what":"stream_customer_history — stream_customer_history","title":"stream_customer_history — stream_customer_history","text":"Loads last row stream sorting timestamp grouping entries columns , looking timestamps returning columns matching pattern","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_customer_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stream_customer_history — stream_customer_history","text":"","code":"stream_customer_history(   stream,   by,   before = as.POSIXct(\"2100-01-01\"),   pattern = \".\",   ... )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_customer_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stream_customer_history — stream_customer_history","text":"stream data.frameish stream character column name group POSIXct look customer history date pattern character vector. length > 1, union matches taken. ... Arguments passed tidyselect::matches ignore.case TRUE, default, ignores case matching names. perl Perl-compatible regexps used?","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_debounce.html","id":null,"dir":"Reference","previous_headings":"","what":"stream_debounce — stream_debounce","title":"stream_debounce — stream_debounce","text":"Takes last row group identified columns identified ...","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_debounce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stream_debounce — stream_debounce","text":"","code":"stream_debounce(stream, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_debounce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stream_debounce — stream_debounce","text":"stream data.table stream format ... <dynamic-dots> columns group debouncing","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_debounce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"stream_debounce — stream_debounce","text":"de-bounced stream","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_debounce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stream_debounce — stream_debounce","text":"","code":"stream <- data.table::data.table(   x = 0:48, y = rep(0:4, 12) ) #> Warning: Item 1 has 49 rows but longest item has 60; recycled with remainder. data.table::setkey(stream, x) stream_debounce(stream, \"y\") #>        y     x #>    <int> <int> #> 1:     0    45 #> 2:     4    44 #> 3:     1    46 #> 4:     2    47 #> 5:     3    48"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_from_audit.html","id":null,"dir":"Reference","previous_headings":"","what":"stream_from_audit — stream_from_audit","title":"stream_from_audit — stream_from_audit","text":"Helper function load data audit table base table identified table_name. Produces stream creation/change/current state fields audit table order reconstruct state given element time past.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_from_audit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stream_from_audit — stream_from_audit","text":"","code":"stream_from_audit(table_name, cols = NULL, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/stream_from_audit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stream_from_audit — stream_from_audit","text":"table_name character table name tessilake::tessi_list_tables short_name long_name cols character vector columns used audit base table. names vector column names identified audit table, values column names identified base table. Default: column names audit table. ... extra arguments passed tessilake::read_tessi","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/street_cleaner.html","id":null,"dir":"Reference","previous_headings":"","what":"street_cleaner — street_cleaner","title":"street_cleaner — street_cleaner","text":"Convenience function loading address info given list customers normalizing running address_normalize","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/street_cleaner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"street_cleaner — street_cleaner","text":"","code":"street_cleaner(list_no)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/street_cleaner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"street_cleaner — street_cleaner","text":"list_no list number Tessitura pull data ","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/street_cleaner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"street_cleaner — street_cleaner","text":"data.table cleaned addresses","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_append_tessi.html","id":null,"dir":"Reference","previous_headings":"","what":"survey_append_tessi — survey_append_tessi","title":"survey_append_tessi — survey_append_tessi","text":"survey_append_tessi","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_append_tessi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"survey_append_tessi — survey_append_tessi","text":"","code":"survey_append_tessi(survey_stream, tables, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_append_tessi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"survey_append_tessi — survey_append_tessi","text":"survey_stream data.table survey data tables character vector tables pass tessilake::read_tessi ... expressions defining features appended survey data","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_append_tessi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"survey_append_tessi — survey_append_tessi","text":"data.table survey data features appended","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_cross.html","id":null,"dir":"Reference","previous_headings":"","what":"survey_cross — survey_cross","title":"survey_cross — survey_cross","text":"survey_cross","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_cross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"survey_cross — survey_cross","text":"","code":"survey_cross(survey_stream, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_cross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"survey_cross — survey_cross","text":"survey_stream data.table survey data ... one regular expressions used locate questions combine","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_cross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"survey_cross — survey_cross","text":"data.table survey data, merged customer_hash question/answer separate column, labelled question.1, answer.1, question.2, answer.2, etc. based position selecting regular expression ...","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_find_column.html","id":null,"dir":"Reference","previous_headings":"","what":"survey_find_column — survey_find_column","title":"survey_find_column — survey_find_column","text":"Find column applying .f element column, results summed, column matching criterion chosen.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_find_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"survey_find_column — survey_find_column","text":"","code":"survey_find_column(survey_data, .f, criterion = \"max\")"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_find_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"survey_find_column — survey_find_column","text":"survey_data data.frame survey data .f function apply element survey_data, return numeric score criterion numeric \"max\". \"max\" first column maximum score chosen, otherwise first column value greater criterion chosen.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_find_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"survey_find_column — survey_find_column","text":"named integer vector, name selected column name value position survey_data","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_monkey.html","id":null,"dir":"Reference","previous_headings":"","what":"survey_monkey — survey_monkey","title":"survey_monkey — survey_monkey","text":"Parser Surveymonkey exports, handles:","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_monkey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"survey_monkey — survey_monkey","text":"","code":"survey_monkey(file)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_monkey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"survey_monkey — survey_monkey","text":"file filename file process","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_monkey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"survey_monkey — survey_monkey","text":"data.table stream survey data. Columns : email timestamp question subquestion answer","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_monkey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"survey_monkey — survey_monkey","text":"identifying email timestamp columns appending survey name labeling questions subquestions converting timestamps POSIXct","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"survey_stream — survey_stream","title":"survey_stream — survey_stream","text":"anonymized using hash joins can still done post-hoc timestamped trends can visualized","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_stream.html","id":"features-include-","dir":"Reference","previous_headings":"","what":"Features include:","title":"survey_stream — survey_stream","text":"customer_hash: string hash customer_no group_customer_hash: string hash group_customer_no timestamp: submission timestamp survey: filename / title survey question: text question subquestion: text subquestion (NA none) answer: text response encoded_answer: embedding answer (e.g. integers likert scale)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"survey_stream — survey_stream","text":"","code":"survey_stream(   survey_dir = config::get(\"tessistream\")$survey_dir,   reader = survey_monkey )"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"survey_stream — survey_stream","text":"survey_dir directory surveys parse reader function(filename) reads survey data, current reader survey_monkey","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_stream.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"survey_stream — survey_stream","text":"Simple dataset survey results.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/survey_stream.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"survey_stream — survey_stream","text":"way irreversibly anonymize data still allow post-hoc joins. secret case (customer number) stored openly database, hashing algorithm explained , number possible customer numbers small, brute forcing mapping trivial. goal just make difficult extract customer information table user knows .","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/tessi_changed_emails.html","id":null,"dir":"Reference","previous_headings":"","what":"tessi_changed_emails — tessi_changed_emails","title":"tessi_changed_emails — tessi_changed_emails","text":"Returns list primary emails changed since since date.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/tessi_changed_emails.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tessi_changed_emails — tessi_changed_emails","text":"","code":"tessi_changed_emails(since = Sys.Date() - 7, ...)"},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/tessi_changed_emails.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tessi_changed_emails — tessi_changed_emails","text":"since date look changed emails ... parameters passed stream_from_audit","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/tessi_changed_emails.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"tessi_changed_emails — tessi_changed_emails","text":"data.table changed emails columns old_value, new_value, customer_no","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/tessistream-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tessistream: Datasets for Analytics and Machine Learning from Tessitura — tessistream-package","title":"tessistream: Datasets for Analytics and Machine Learning from Tessitura — tessistream-package","text":"| Builds timestamped datasets based contributions, ticket sales, address changes, inventory historical predictive analysis.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/reference/tessistream-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tessistream: Datasets for Analytics and Machine Learning from Tessitura — tessistream-package","text":"Maintainer: Sky Syzygy ssyzygy@bam.org (ORCID)","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/news/index.html","id":"tessistream-050","dir":"Changelog","previous_headings":"","what":"tessistream 0.5.0","title":"tessistream 0.5.0","text":"incremental stream() building existing streams optimizations stream_customer_history setnafill_group","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/news/index.html","id":"tessistream-041","dir":"Changelog","previous_headings":"","what":"tessistream 0.4.1","title":"tessistream 0.4.1","text":"email_stream now can built incrementally, efficiency","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/news/index.html","id":"tessistream-040","dir":"Changelog","previous_headings":"","what":"tessistream 0.4.0","title":"tessistream 0.4.0","text":"Working email_stream implementation","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/news/index.html","id":"tessistream-031","dir":"Changelog","previous_headings":"","what":"tessistream 0.3.1","title":"tessistream 0.3.1","text":"Faster p2_unnest means faster load update times Add mppLinkData p2_update p2_stream open data now recorded table.","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/news/index.html","id":"tessistream-030","dir":"Changelog","previous_headings":"","what":"tessistream 0.3.0","title":"tessistream 0.3.0","text":"Working contribution_stream implementation Updates tessilake v0.4.0 Update p2_orphans catch mismatched customer_nos","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/news/index.html","id":"tessistream-020","dir":"Changelog","previous_headings":"","what":"tessistream 0.2.0","title":"tessistream 0.2.0","text":"Working address_stream implementation operational p2_orphans process reporting!","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/news/index.html","id":"tessistream-011","dir":"Changelog","previous_headings":"","what":"tessistream 0.1.1","title":"tessistream 0.1.1","text":"First half p2_orphans project merged beta testing","code":""},{"path":"https://bamorg-my.sharepoint.com/personal/ssyzygy_bam_org/Documents/documentation/tessistream/news/index.html","id":"tessistream-010","dir":"Changelog","previous_headings":"","what":"tessistream 0.1.0","title":"tessistream 0.1.0","text":"Added NEWS.md file track changes package. First version - working p2_stream, nothing else yet.","code":""}]
